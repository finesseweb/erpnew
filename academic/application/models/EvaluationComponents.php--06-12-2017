<?php
/** 
 * @Framework Zend Framework
 * @Powered By TIS 
 * @category   ERP Product
 * @copyright  Copyright (c) 2014-2015 Techintegrasolutions Pvt Ltd.
 * (http://www.techintegrasolutions.com)
 *	Authors Kannan and Rajkumar
 */
class Application_Model_EvaluationComponents extends Zend_Db_Table_Abstract
{
    public $_name = 'evaluation_components_master';
    protected $_id = 'ec_id';
  
    //get details by record for edit
	public function getRecord($id)
    {       
        $select=$this->_db->select()
                      ->from($this->_name)
                      ->where("$this->_name.$this->_id=?", $id)				   
					  ->where("$this->_name.status !=?", 2);
        $result=$this->getAdapter()
                      ->fetchRow($select);    
//print_r($result);die;					  
        return $result;
    }
	
	//Get all records
	public function getRecords()
    {       
        $select=$this->_db->select()
                      ->from($this->_name)
					  ->joinLeft(array("components_items"=>"evaluation_components_items_master"),"components_items.ec_id=$this->_name.ec_id",array("term_id","course_id"))
					  //->joinleft(array("term"=>"term_master"),"term.term_id=components_items.term_id",array("term_name"))
					  // ->joinleft(array("course"=>"course_master"),"course.course_id=components_items.course_id",array("course_name"))
					   //->joinleft(array("cc"=>"course_category_master"),"cc.cc_id=$this->_name.cc_id",array("cc_name"))
					   //->joinleft(array("credit"=>"credit_master"),"credit.credit_id=$this->_name.credit_id",array("credit_value"))
					   ->joinleft(array("academic"=>"academic_master"),"academic.academic_year_id=$this->_name.academic_year_id",array("from_date","to_date","short_code"))
					  ->where("$this->_name.status !=?", 2)
					  ->group("$this->_name.ec_id")
					  ->order("$this->_name.$this->_id DESC");
        $result=$this->getAdapter()
                      ->fetchAll($select);    
//print_r($result);die;						  
        return $result;
    }
	//View purpose
	
	public function getcorecourselearning($corecourselearn) {

        $select = $this->_db->select()
                ->from($this->_name)
				->joinleft(array("term"=>"term_master"),"term.term_id=$this->_name.term_id",array("term_name"))
				 ->joinleft(array("course"=>"course_master"),"course.course_id=$this->_name.course_id",array("course_name"))
				 ->joinleft(array("cc"=>"course_category_master"),"cc.cc_id=$this->_name.cc_id",array("cc_name"))
				 ->joinleft(array("credit"=>"credit_master"),"credit.credit_id=$this->_name.credit_id",array("credit_value"))
				->where("$this->_name.academic_year_id =?", $corecourselearn)
				->where("$this->_name.status!=?", 2);
		
        $result = $this->getAdapter()
                ->fetchAll($select);
		
		
				
		return $result;
		

    }
	public function getItemRecords($eval_component_id){
		
		$select = $this->_db->select()
					->from($this->_name)
					->joinLeft(array("component_items"=>"evaluation_components_items_master"),"component_items.ec_id=$this->_name.ec_id",array("term_id","course_id","component_name","weightage","remaining_weightage"))
					->joinLeft(array("term"=>"term_master"),"term.term_id=component_items.term_id",array("term_name"))
					->joinLeft(array("course"=>"course_master"),"course.course_id=component_items.course_id",array("course_id as course","course_name"))	
					->where("$this->_name.status != 2")
					->where("$this->_name.ec_id=?",$eval_component_id);
					
					
		$result = $this->getAdapter()
					->fetchAll($select);
					
					
			return $result;
		
		
		
	}
	public function getComponents($academic_year_id,$department_id,$employee_id,$term_id,$course_id){
			$select = $this->_db->select()
					->from($this->_name)
					->joinLeft(array("component_items"=>"evaluation_components_items_master"),"component_items.ec_id=$this->_name.ec_id",array("eci_id","term_id","course_id","component_name","weightage"))
					//->joinLeft(array("com_grades"=>"component_grades"),"component_items.eci_id=com_grades.component_id",array("component_id"))
					->where("$this->_name.status != 2")
					//->where("com_grades.component_id IS NULL")
					->where("$this->_name.academic_year_id=?",$academic_year_id)
					->where("$this->_name.department_id=?",$department_id)
					->where("$this->_name.employee_id=?",$employee_id)
					->where("component_items.term_id=?",$term_id)
					->where("component_items.course_id=?",$course_id);
					
				$result = $this->getAdapter()
					->fetchAll($select);
					$data = array();					
					foreach($result as $val){
						
						$data[$val['eci_id']] = $val['component_name'];
						
					}
		return $data;
		
		
	}
	public function getAddComponents($academic_year_id,$department_id,$employee_id,$term_id,$course_id){
			$select = $this->_db->select()
					->from($this->_name)
					->joinLeft(array("component_items"=>"evaluation_components_items_master"),"component_items.ec_id=$this->_name.ec_id",array("eci_id","term_id","course_id","component_name","weightage"))
					->joinLeft(array("com_grades"=>"component_grades"),"component_items.eci_id=com_grades.component_id",array("component_id"))
					->where("$this->_name.status != 2")
					->where("com_grades.component_id IS NULL")
					->where("$this->_name.academic_year_id=?",$academic_year_id)
					->where("$this->_name.department_id=?",$department_id)
					->where("$this->_name.employee_id=?",$employee_id)
					->where("component_items.term_id=?",$term_id)
					->where("component_items.course_id=?",$course_id);
					
				$result = $this->getAdapter()
					->fetchAll($select);
					$data = array();					
					foreach($result as $val){
						
						$data[$val['eci_id']] = $val['component_name'];
						
					}
		return $data;
		
		
	}
	public function getGradeAddComponents($academic_year_id,$department_id,$employee_id,$term_id,$course_id){
			$select = $this->_db->select()
					->from($this->_name)
					->joinLeft(array("component_items"=>"evaluation_components_items_master"),"component_items.ec_id=$this->_name.ec_id",array("eci_id","term_id","course_id","component_name","weightage"))
					->joinLeft(array("grade_allocation"=>"grade_allocation_master"),"component_items.eci_id=grade_allocation.component_id",array("component_id"))
					->where("$this->_name.status != 2")
					->where("grade_allocation.component_id IS NULL")
					->where("$this->_name.academic_year_id=?",$academic_year_id)
					->where("$this->_name.department_id=?",$department_id)
					->where("$this->_name.employee_id=?",$employee_id)
					->where("component_items.term_id=?",$term_id)
					->where("component_items.course_id=?",$course_id);
					
				$result = $this->getAdapter()
					->fetchAll($select);
					$data = array();					
					foreach($result as $val){
						
						$data[$val['eci_id']] = $val['component_name'];
						
					}
		return $data;
		
		
	}
	public function getAllComponents($academic_year_id,$department_id,$employee_id,$term_id,$course_id){
		$select = $this->_db->select()
			 ->from($this->_name)
			 ->joinLeft(array("component_items"=>"evaluation_components_items_master"),"component_items.ec_id=$this->_name.ec_id",array("eci_id","term_id","course_id","component_name","weightage"))
			 ->where("$this->_name.status != 2")
			 ->where("$this->_name.academic_year_id=?",$academic_year_id)
			 ->where("$this->_name.department_id=?",$department_id)
			 ->where("$this->_name.employee_id=?",$employee_id)
			 ->where("component_items.term_id=?",$term_id)
			 ->where("component_items.course_id=?",$course_id);
			
			 $result = $this->getAdapter()
					->fetchAll($select);
					
			return $result;		
		
	}
	
	public function getEvlComponentCount($academic_year_id,$department_id,$employee_id)
	{
			
			$select = $this->_db->select()
					->from($this->_name)
					
					//->where("$this->_name.employee_id IS NULL")
					->where("$this->_name.academic_year_id=?",$academic_year_id)
					->where("$this->_name.department_id=?",$department_id)
					->where("$this->_name.employee_id=?",$employee_id)
					->where("$this->_name.status != 2");
			//echo $select;die;		
			$result = $this->getAdapter()
					       ->fetchRow($select);
			//print_r($result);die;		
		    return $result;
			
	}
	
	
	//rajesh code for weightage
	public function getweightages($academic_year_id,$department_id,$employee_id,$course_id,$component_id,$term_id)
	{
			
			$select = $this->_db->select()
					->from($this->_name)
					->joinLeft(array("component_items"=>"evaluation_components_items_master"),"component_items.ec_id=$this->_name.ec_id",array("eci_id","term_id","course_id","component_name","weightage"))
					//->where("$this->_name.employee_id IS NULL")
					->where("$this->_name.academic_year_id=?",$academic_year_id)
					->where("$this->_name.department_id=?",$department_id)
					->where("$this->_name.employee_id=?",$employee_id)
					->where("component_items.course_id=?",$course_id)
					->where("component_items.term_id=?",$term_id)
					->where("component_items.eci_id=?",$component_id)
					
					->where("$this->_name.status != 2");
			//echo $select;die;		
			$result = $this->getAdapter()
					       ->fetchRow($select);
			//print_r($result);die;		
		    return $result;
			
	}
	
	public function getComponentsView($id)
	{
		$select = $this->_db->select()
		          ->from($this->_name)
				  ->joinLeft(array('components_items'=>'evaluation_components_items_master'),"components_items.ec_id=$this->_name.ec_id",array("term_id","course_id","GROUP_CONCAT(component_name) as cmp_name","GROUP_CONCAT(weightage) as weighs","GROUP_CONCAT(remaining_weightage) as remain_weighs","eci_id"))
				  ->joinLeft(array('term'=>'term_master'),"term.term_id=components_items.term_id",array("term_name"))
				  ->joinLeft(array('course'=>'course_master'),"course.course_id=components_items.course_id",array("course_name"))
				  ->where("$this->_name.ec_id=?",$id)
				  ->group("components_items.term_id")
				   ->group("components_items.course_id")
				   ->where("$this->_name.status != 2");

				$result = $this->getAdapter()
						->fetchAll($select);
						
					return $result;	
				  
		
		
	}
}
?>